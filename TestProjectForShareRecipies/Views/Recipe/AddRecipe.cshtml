@model RecipeFormModel

@{
    ViewBag.Title = "Add Recipe";
    var ingredients = Model.Ingredients.ToList();
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="row">
    <div class="col-sm-12 offset-lg-2 col-lg-8 offset-xl-3 col-xl-6">
        <form method="post">
            <div class="form-group">
                <label asp-for="Name"></label>
                <input asp-for="Name" class="form-control" placeholder="Name..." />
                <span asp-validation-for="Name" class="small text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Picture"></label>
                <input asp-for="Picture" class="form-control" placeholder="Your fine URL here..." />
                <span asp-validation-for="Picture" class="small text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description"></label>
                <input asp-for="Description" class="form-control" placeholder="Write your descripton here..." />
                <span asp-validation-for="Description" class="small text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId"></label>
                <select asp-for="CategoryId" class="form-control">
                    @foreach (var category in Model.Categories){
                        <option value="@category.Id">@category.Name</option>
                    }
                </select>
                <span asp-validation-for="CategoryId" class="small text-danger"></span>
            </div>

            <!--TODO: Here we must to add dinamic field for ingredients-->

            <div id="ingredientsContainer">
                <h5>
                    Ingredients:
                </h5>
                <ul id="ingredient-list" class="list-group list-group-flush">

                </ul>
                <input type="text" id="ingredient-name" class="form-control" placeholder="Ingredient name" required/>
                <input type="number" id="ingredient-quantity" class="form-control" placeholder="Quantity" step="0.01" required />
                <select class="form-control" id="ingredient-meassureUnit">
                     @foreach (var meassureUnit in Model.MeassureUnits)
                     {
                         <option value="@meassureUnit.Id">@meassureUnit.Name</option>
                     }
                </select>
                <input type="button" id="add-ingredient" value="Add Ingredient" onclick="AddIngredient()"/>
            </div>

            <div class="form-group">
                <input class="btn btn-primary mt-3 form-control" type="submit" value="Save Recipe" />
            </div>
        </form>

    </div>
</div>

<script>
    function AddIngredient() {
        const ulElement = document.getElementById("ingredient-list");
        let name = document.getElementById("ingredient-name");
        let quantity = document.getElementById("ingredient-quantity");
        let meassureUnit = document.getElementById("ingredient-meassureUnit");

        let selectedIndex = meassureUnit.selectedIndex;
        let selectedOptions = meassureUnit.options[selectedIndex];

        let arr = [name.value.toUpperCase(), quantity.value, selectedOptions.textContent];

        let liElement = document.createElement("li");
        liElement.classList.add("list-group-item");
        liElement.style.display = "flex";
        liElement.style.justifyContent = "space-between";
        liElement.textContent = arr.join(" ");
        
        let deleteButton = document.createElement("button");
        deleteButton.classList.add("btn");
        deleteButton.classList.add("btn-danger");
        deleteButton.classList.add("btn-sm");
        deleteButton.textContent = "Delete";
        deleteButton.addEventListener("click", () => { liElement.remove() });

        liElement.appendChild(deleteButton);

        if (name.value !== "" && quantity.value !== "") {
            ulElement.appendChild(liElement);
            name.value = "";
            quantity.value = "";
            meassureUnit.selectedIndex = 0;
        }

        
    }
</script>

@section Scripts{
        <partial name="_ValidationScriptsPartial" />
}